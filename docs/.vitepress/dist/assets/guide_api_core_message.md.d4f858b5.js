import{_ as s,S as n,N as a,Q as l}from"./chunks/framework.e194ce62.js";const p="/mqtt/xiaoxizhongxin.png",F=JSON.parse('{"title":"消息中心","description":"","frontmatter":{},"headers":[],"relativePath":"guide/api/core/message.md","filePath":"guide/api/core/message.md","lastUpdated":1734938972000}'),e={name:"guide/api/core/message.md"},o=l('<h1 id="消息中心" tabindex="-1">消息中心 <a class="header-anchor" href="#消息中心" aria-label="Permalink to &quot;消息中心&quot;">​</a></h1><h2 id="介绍" tabindex="-1">介绍 <a class="header-anchor" href="#介绍" aria-label="Permalink to &quot;介绍&quot;">​</a></h2><p>在之前的版本中，即时消息的发送都是通过自身项目启用mqtt或者websocket实例来发送的，经过深思熟虑，我觉得将消息发送的功能独立出来，作为一个独立的服务，这样可以更好的解耦，也可以更好的管理消息的发送，所以我将消息发送的功能独立出来，作为一个独立的服务，这个服务就是消息中心<code>MessageCenter</code>。 api端只负责创建消息，然后告诉消息中心需要在什么时间发送消息，消息中心收到消息后在指定时间发送消息，这样就可以实现消息的定时发送，消息的发送时间可以是任意时间，只要消息中心在线，消息就会按照指定的时间发送。 <img src="'+p+`" alt="xiaoxizhongxin.png" data-fancybox="gallery"></p><div class="tip custom-block"><p class="custom-block-title">提示、</p><ul><li>消息中心位于<code>应用服务</code>-&gt;<code>后台服务</code></li><li>消息中心是一个独立的服务，需要单独部署</li><li>消息中心的消息发送是通过<code>mqtt</code>协议发送的</li><li>使用消息中心必须启用Redis服务</li></ul></div><h2 id="启用消息中心" tabindex="-1">启用消息中心 <a class="header-anchor" href="#启用消息中心" aria-label="Permalink to &quot;启用消息中心&quot;">​</a></h2><h3 id="使用redis缓存" tabindex="-1">使用Redis缓存 <a class="header-anchor" href="#使用redis缓存" aria-label="Permalink to &quot;使用Redis缓存&quot;">​</a></h3><p>消息中心使用Redis延迟队列来实现消息发送，所以在使用消息中心之前，必须启用Redis服务，如果你还没有启用Redis服务，请先在<code>SimpleAdmin.Cache</code>启用Redis服务。</p><div class="language-json line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki github-dark has-highlighted-lines"><code><span class="line"><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">//缓存设置</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">&quot;CacheSettings&quot;</span><span style="color:#E1E4E8;">: {</span></span>
<span class="line highlighted"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">&quot;UseRedis&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">, </span><span style="color:#6A737D;">//启用redis</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">&quot;RedisSettings&quot;</span><span style="color:#E1E4E8;">: {</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#79B8FF;">&quot;Address&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;127.0.0.1:6379&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#6A737D;">//地址</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#79B8FF;">&quot;Password&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;123456&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#6A737D;">//Redis服务密码</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#79B8FF;">&quot;Db&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">9</span><span style="color:#E1E4E8;">, </span><span style="color:#6A737D;">//默认库</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#79B8FF;">&quot;ClearRedis&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;"> </span><span style="color:#6A737D;">//是否每次启动都清除Redis缓存</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><h3 id="启用消息中心-1" tabindex="-1">启用消息中心 <a class="header-anchor" href="#启用消息中心-1" aria-label="Permalink to &quot;启用消息中心&quot;">​</a></h3><p>在<code>SimpleAdmin.System</code>配置文件中启动消息中心</p><div class="language-json line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki github-dark has-highlighted-lines"><code><span class="line"><span style="color:#6A737D;">//系统层设置</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#9ECBFF;">&quot;SystemSettings&quot;</span><span style="color:#E1E4E8;">: {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">&quot;InitTable&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">false</span><span style="color:#E1E4E8;">, </span><span style="color:#6A737D;">//是否初始化表结构</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">&quot;InitSeedData&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">false</span><span style="color:#E1E4E8;">, </span><span style="color:#6A737D;">//是否初始化种子数据</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">&quot;SuperAdminViewAllData&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">, </span><span style="color:#6A737D;">//是否超级管理员可以查看所有数据</span></span>
<span class="line highlighted"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">&quot;UseMessageCenter&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">, </span><span style="color:#6A737D;">//是否启用通知中心</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h2 id="使用消息中心" tabindex="-1">使用消息中心 <a class="header-anchor" href="#使用消息中心" aria-label="Permalink to &quot;使用消息中心&quot;">​</a></h2><h3 id="添加消息到事件总线" tabindex="-1">添加消息到事件总线 <a class="header-anchor" href="#添加消息到事件总线" aria-label="Permalink to &quot;添加消息到事件总线&quot;">​</a></h3><p>在<code>MessageService</code>里,当我们添加了一条站内信，会将该消息添加到事件总线中</p><div class="language-csharp line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki github-dark"><code><span class="line"><span style="color:#F97583;">await</span><span style="color:#E1E4E8;"> _eventPublisher.</span><span style="color:#B392F0;">PublishAsync</span><span style="color:#E1E4E8;">(EventSubscriberConst.NEW_MESSAGE, </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">NewMessageEvent</span></span>
<span class="line"><span style="color:#E1E4E8;">            {</span></span>
<span class="line"><span style="color:#E1E4E8;">                Id </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> sysMessage.Id,</span></span>
<span class="line"><span style="color:#E1E4E8;">                SendWay </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> sysMessage.SendWay,</span></span>
<span class="line"><span style="color:#E1E4E8;">                SendTime </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> sysMessage.SendTime</span></span>
<span class="line"><span style="color:#E1E4E8;">            });</span><span style="color:#6A737D;">//通知用户有新的消息</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h3 id="事件总线处理" tabindex="-1">事件总线处理 <a class="header-anchor" href="#事件总线处理" aria-label="Permalink to &quot;事件总线处理&quot;">​</a></h3><p>事件总线会根据发送事件计算延迟事件,然后交给消息中心处理</p><div class="language-csharp line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki github-dark"><code><span class="line"><span style="color:#6A737D;">/// &lt;</span><span style="color:#85E89D;">summary</span><span style="color:#6A737D;">&gt;</span></span>
<span class="line"><span style="color:#6A737D;">    /// 有新的消息</span></span>
<span class="line"><span style="color:#6A737D;">    /// &lt;/</span><span style="color:#85E89D;">summary</span><span style="color:#6A737D;">&gt;</span></span>
<span class="line"><span style="color:#6A737D;">    /// &lt;</span><span style="color:#85E89D;">param</span><span style="color:#6A737D;"> </span><span style="color:#B392F0;">name</span><span style="color:#6A737D;">=</span><span style="color:#9ECBFF;">&quot;context&quot;</span><span style="color:#6A737D;">&gt;&lt;/</span><span style="color:#85E89D;">param</span><span style="color:#6A737D;">&gt;</span></span>
<span class="line"><span style="color:#6A737D;">    /// &lt;</span><span style="color:#85E89D;">returns</span><span style="color:#6A737D;">&gt;&lt;/</span><span style="color:#85E89D;">returns</span><span style="color:#6A737D;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    [</span><span style="color:#B392F0;">EventSubscribe</span><span style="color:#E1E4E8;">(EventSubscriberConst.NEW_MESSAGE)]</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">async</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Task</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">NewMessage</span><span style="color:#E1E4E8;">(</span><span style="color:#B392F0;">EventHandlerExecutingContext</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">context</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">    {</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">newMessageEvent</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> (</span><span style="color:#B392F0;">NewMessageEvent</span><span style="color:#E1E4E8;">)context.Source.Payload;</span><span style="color:#6A737D;">//获取参数</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">messageId</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> newMessageEvent.Id;</span></span>
<span class="line"><span style="color:#6A737D;">        //如果启用了通知中心</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (_useMessageCenter)</span></span>
<span class="line"><span style="color:#E1E4E8;">        {</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (newMessageEvent.SendWay </span><span style="color:#F97583;">==</span><span style="color:#E1E4E8;"> SysDictConst.SEND_WAY_NOW)</span></span>
<span class="line"><span style="color:#E1E4E8;">            {</span></span>
<span class="line"><span style="color:#6A737D;">                //立即发送</span></span>
<span class="line"><span style="color:#E1E4E8;">                </span><span style="color:#F97583;">await</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">SendMessage</span><span style="color:#E1E4E8;">(messageId);</span></span>
<span class="line"><span style="color:#E1E4E8;">            }</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#F97583;">else</span></span>
<span class="line"><span style="color:#E1E4E8;">            {</span></span>
<span class="line"><span style="color:#6A737D;">                //延迟发送</span></span>
<span class="line"><span style="color:#E1E4E8;">                </span><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">sendTime</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> newMessageEvent.SendTime;</span></span>
<span class="line"><span style="color:#6A737D;">                //计算延迟时间</span></span>
<span class="line"><span style="color:#E1E4E8;">                </span><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">delay</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> (</span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;">)(sendTime </span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;"> DateTime.Now).TotalSeconds;</span></span>
<span class="line"><span style="color:#E1E4E8;">                </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (delay </span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">                {</span></span>
<span class="line"><span style="color:#E1E4E8;">                    </span><span style="color:#F97583;">await</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">SendMessage</span><span style="color:#E1E4E8;">(messageId, delay);</span></span>
<span class="line"><span style="color:#E1E4E8;">                }</span></span>
<span class="line"><span style="color:#E1E4E8;">                </span><span style="color:#F97583;">else</span></span>
<span class="line"><span style="color:#E1E4E8;">                {</span></span>
<span class="line"><span style="color:#E1E4E8;">                    </span><span style="color:#F97583;">await</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">SendMessage</span><span style="color:#E1E4E8;">(messageId);</span></span>
<span class="line"><span style="color:#E1E4E8;">                }</span></span>
<span class="line"><span style="color:#E1E4E8;">            }</span></span>
<span class="line"><span style="color:#E1E4E8;">        }</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span></span>
<span class="line"><span style="color:#E1E4E8;">    </span></span>
<span class="line"><span style="color:#6A737D;">    /// &lt;</span><span style="color:#85E89D;">summary</span><span style="color:#6A737D;">&gt;</span></span>
<span class="line"><span style="color:#6A737D;">    /// 发送消息</span></span>
<span class="line"><span style="color:#6A737D;">    /// &lt;/</span><span style="color:#85E89D;">summary</span><span style="color:#6A737D;">&gt;</span></span>
<span class="line"><span style="color:#6A737D;">    /// &lt;</span><span style="color:#85E89D;">param</span><span style="color:#6A737D;"> </span><span style="color:#B392F0;">name</span><span style="color:#6A737D;">=</span><span style="color:#9ECBFF;">&quot;messageId&quot;</span><span style="color:#6A737D;">&gt;消息id&lt;/</span><span style="color:#85E89D;">param</span><span style="color:#6A737D;">&gt;</span></span>
<span class="line"><span style="color:#6A737D;">    /// &lt;</span><span style="color:#85E89D;">param</span><span style="color:#6A737D;"> </span><span style="color:#B392F0;">name</span><span style="color:#6A737D;">=</span><span style="color:#9ECBFF;">&quot;delay&quot;</span><span style="color:#6A737D;">&gt;延迟&lt;/</span><span style="color:#85E89D;">param</span><span style="color:#6A737D;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">private</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">async</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Task</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">SendMessage</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">long</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">messageId</span><span style="color:#E1E4E8;">, </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">delay</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">    {</span></span>
<span class="line"><span style="color:#E1E4E8;">        _simpleCacheService.</span><span style="color:#B392F0;">AddDelayQueue</span><span style="color:#E1E4E8;">(CacheConst.CACHE_NOTIFICATION, messageId, delay);</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br></div></div><h3 id="处理消息" tabindex="-1">处理消息 <a class="header-anchor" href="#处理消息" aria-label="Permalink to &quot;处理消息&quot;">​</a></h3><p><code>MessageCenter</code> 拿到消息后会对消息进行处理然后通过<code>MQTT</code>发送</p><div class="language-csharp line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki github-dark"><code><span class="line"><span style="color:#6A737D;">//获取延迟队列</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">queue</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> _simpleCacheService.</span><span style="color:#B392F0;">GetDelayQueue</span><span style="color:#E1E4E8;">&lt;</span><span style="color:#F97583;">long</span><span style="color:#E1E4E8;">&gt;(CacheConst.CACHE_NOTIFICATION);</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">while</span><span style="color:#E1E4E8;"> (</span><span style="color:#F97583;">!</span><span style="color:#E1E4E8;">stoppingToken.IsCancellationRequested)</span></span>
<span class="line"><span style="color:#E1E4E8;">        {</span></span>
<span class="line"><span style="color:#6A737D;">            //一次拿十条，如果拿一条就用queue.TakeOneAsync(-1);-1是超时时间，默认0秒永远阻塞；负数表示直接返回，不阻塞。</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">data</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">await</span><span style="color:#E1E4E8;"> queue.</span><span style="color:#B392F0;">TakeOneAsync</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">-</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (data </span><span style="color:#F97583;">!=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">            {</span></span>
<span class="line"><span style="color:#E1E4E8;">                _logger.</span><span style="color:#B392F0;">LogDebug</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">$&quot;消费者收到消息,消息ID:{</span><span style="color:#E1E4E8;">data</span><span style="color:#9ECBFF;">},时间：{</span><span style="color:#E1E4E8;">DateTime</span><span style="color:#9ECBFF;">.</span><span style="color:#E1E4E8;">Now</span><span style="color:#9ECBFF;">}&quot;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">                </span><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">db</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> DbContext.DB.</span><span style="color:#B392F0;">CopyNew</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#6A737D;">                //获取消息</span></span>
<span class="line"><span style="color:#E1E4E8;">                </span><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">message</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">await</span><span style="color:#E1E4E8;"> db.</span><span style="color:#B392F0;">Queryable</span><span style="color:#E1E4E8;">&lt;</span><span style="color:#B392F0;">SysMessage</span><span style="color:#E1E4E8;">&gt;().</span><span style="color:#B392F0;">InSingleAsync</span><span style="color:#E1E4E8;">(data);</span></span>
<span class="line"><span style="color:#E1E4E8;">                </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (message </span><span style="color:#F97583;">!=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">null</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">                {</span></span>
<span class="line"><span style="color:#E1E4E8;">                    message.Status </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> SysDictConst.MESSAGE_STATUS_ALREADY;</span></span>
<span class="line"><span style="color:#6A737D;">                    //获取待发送的消息</span></span>
<span class="line"><span style="color:#E1E4E8;">                    </span><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">messageUsers</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">await</span><span style="color:#E1E4E8;"> db.</span><span style="color:#B392F0;">Queryable</span><span style="color:#E1E4E8;">&lt;</span><span style="color:#B392F0;">SysMessageUser</span><span style="color:#E1E4E8;">&gt;()</span></span>
<span class="line"><span style="color:#E1E4E8;">                        .</span><span style="color:#B392F0;">Where</span><span style="color:#E1E4E8;">(</span><span style="color:#B392F0;">it</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> it.MessageId </span><span style="color:#F97583;">==</span><span style="color:#E1E4E8;"> message.Id </span><span style="color:#F97583;">&amp;&amp;</span><span style="color:#E1E4E8;"> it.Status </span><span style="color:#F97583;">==</span><span style="color:#E1E4E8;"> SysDictConst.MESSAGE_STATUS_READY).</span><span style="color:#B392F0;">ToListAsync</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">                    </span><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">hasError</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">false</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#6A737D;">                    //开启事务</span></span>
<span class="line"><span style="color:#E1E4E8;">                    </span><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">result</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">await</span><span style="color:#E1E4E8;"> db.</span><span style="color:#B392F0;">UseTranAsync</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">async</span><span style="color:#E1E4E8;"> () </span><span style="color:#F97583;">=&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">                    {</span></span>
<span class="line"><span style="color:#E1E4E8;">                        messageUsers.</span><span style="color:#B392F0;">ForEach</span><span style="color:#E1E4E8;">(</span><span style="color:#B392F0;">it</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">                        {</span></span>
<span class="line"><span style="color:#E1E4E8;">                            </span><span style="color:#F97583;">try</span></span>
<span class="line"><span style="color:#E1E4E8;">                            {</span></span>
<span class="line"><span style="color:#6A737D;">                                //发送消息</span></span>
<span class="line"><span style="color:#E1E4E8;">                                _mqttClient.</span><span style="color:#B392F0;">PublishAsync</span><span style="color:#E1E4E8;">(MqttConst.MQTT_TOPIC_PREFIX </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> it.UserId, </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">MqttMessage</span><span style="color:#E1E4E8;">()</span></span>
<span class="line"><span style="color:#E1E4E8;">                                {</span></span>
<span class="line"><span style="color:#E1E4E8;">                                    MsgType </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> MqttConst.MQTT_MESSAGE_NEW,</span></span>
<span class="line"><span style="color:#E1E4E8;">                                    Data </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">MessageData</span><span style="color:#E1E4E8;">()</span></span>
<span class="line"><span style="color:#E1E4E8;">                                    {</span></span>
<span class="line"><span style="color:#E1E4E8;">                                        Subject </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> message.Subject,</span></span>
<span class="line"><span style="color:#E1E4E8;">                                        Content </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> message.Content</span></span>
<span class="line"><span style="color:#E1E4E8;">                                    }</span></span>
<span class="line"><span style="color:#E1E4E8;">                                });</span></span>
<span class="line"><span style="color:#E1E4E8;">                                it.Status </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> SysDictConst.MESSAGE_STATUS_ALREADY;</span></span>
<span class="line"><span style="color:#E1E4E8;">                                it.UpdateTime </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> DateTime.Now;</span></span>
<span class="line"><span style="color:#E1E4E8;">                            }</span></span>
<span class="line"><span style="color:#E1E4E8;">                            </span><span style="color:#F97583;">catch</span><span style="color:#E1E4E8;"> (</span><span style="color:#B392F0;">Exception</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">e</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">                            {</span></span>
<span class="line"><span style="color:#E1E4E8;">                                hasError </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">                                _logger.</span><span style="color:#B392F0;">LogError</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">$&quot;发送消息失败:{</span><span style="color:#E1E4E8;">e</span><span style="color:#9ECBFF;">.</span><span style="color:#E1E4E8;">Message</span><span style="color:#9ECBFF;">}&quot;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">                            }</span></span>
<span class="line"><span style="color:#E1E4E8;">                        });</span></span>
<span class="line"><span style="color:#E1E4E8;">                        </span><span style="color:#F97583;">await</span><span style="color:#E1E4E8;"> db.</span><span style="color:#B392F0;">Updateable</span><span style="color:#E1E4E8;">(messageUsers).</span><span style="color:#B392F0;">ExecuteCommandAsync</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">                        </span><span style="color:#F97583;">await</span><span style="color:#E1E4E8;"> db.</span><span style="color:#B392F0;">Updateable</span><span style="color:#E1E4E8;">(message).</span><span style="color:#B392F0;">ExecuteCommandAsync</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">                    });</span></span>
<span class="line"><span style="color:#6A737D;">                    //如果有失败的，重写发到延迟队列</span></span>
<span class="line"><span style="color:#E1E4E8;">                    </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (hasError)</span></span>
<span class="line"><span style="color:#E1E4E8;">                    {</span></span>
<span class="line"><span style="color:#E1E4E8;">                        _logger.</span><span style="color:#B392F0;">LogDebug</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">$&quot;有失败的消息，重新发到延迟队列&quot;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">                        queue.</span><span style="color:#B392F0;">Add</span><span style="color:#E1E4E8;">(message.Id, </span><span style="color:#79B8FF;">5</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">                    }</span></span>
<span class="line"><span style="color:#E1E4E8;">                }</span></span>
<span class="line"><span style="color:#E1E4E8;">                queue.</span><span style="color:#B392F0;">Acknowledge</span><span style="color:#E1E4E8;">(data);</span><span style="color:#6A737D;">//告诉队列已经消费了的数据</span></span>
<span class="line"><span style="color:#E1E4E8;">                _logger.</span><span style="color:#B392F0;">LogDebug</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;消费成功&quot;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">            }</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#F97583;">else</span></span>
<span class="line"><span style="color:#E1E4E8;">            {</span></span>
<span class="line"><span style="color:#E1E4E8;">                _logger.</span><span style="color:#B392F0;">LogDebug</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;消费者从队列中没有拿到数据:&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> DateTime.Now);</span></span>
<span class="line"><span style="color:#E1E4E8;">                </span><span style="color:#F97583;">await</span><span style="color:#E1E4E8;"> Task.</span><span style="color:#B392F0;">Delay</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">1000</span><span style="color:#E1E4E8;">, stoppingToken);</span></span>
<span class="line"><span style="color:#E1E4E8;">            }</span></span>
<span class="line"><span style="color:#E1E4E8;">        }</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br></div></div><h3 id="消息格式" tabindex="-1">消息格式 <a class="header-anchor" href="#消息格式" aria-label="Permalink to &quot;消息格式&quot;">​</a></h3><p>消息格式如下</p><div class="language-csharp line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki github-dark"><code><span class="line"><span style="color:#6A737D;">/// &lt;</span><span style="color:#85E89D;">summary</span><span style="color:#6A737D;">&gt;</span></span>
<span class="line"><span style="color:#6A737D;">/// mqtt消息</span></span>
<span class="line"><span style="color:#6A737D;">/// &lt;/</span><span style="color:#85E89D;">summary</span><span style="color:#6A737D;">&gt;</span></span>
<span class="line"><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">class</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">MqttMessage</span></span>
<span class="line"><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#6A737D;">    /// &lt;</span><span style="color:#85E89D;">summary</span><span style="color:#6A737D;">&gt;</span></span>
<span class="line"><span style="color:#6A737D;">    /// 消息分类</span></span>
<span class="line"><span style="color:#6A737D;">    /// &lt;/</span><span style="color:#85E89D;">summary</span><span style="color:#6A737D;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">string</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">MsgType</span><span style="color:#E1E4E8;"> { </span><span style="color:#F97583;">get</span><span style="color:#E1E4E8;">; </span><span style="color:#F97583;">set</span><span style="color:#E1E4E8;">; }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">    /// &lt;</span><span style="color:#85E89D;">summary</span><span style="color:#6A737D;">&gt;</span></span>
<span class="line"><span style="color:#6A737D;">    /// 消息内容</span></span>
<span class="line"><span style="color:#6A737D;">    /// &lt;/</span><span style="color:#85E89D;">summary</span><span style="color:#6A737D;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">MessageData</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Data</span><span style="color:#E1E4E8;"> { </span><span style="color:#F97583;">get</span><span style="color:#E1E4E8;">; </span><span style="color:#F97583;">set</span><span style="color:#E1E4E8;">; }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">    /// &lt;</span><span style="color:#85E89D;">summary</span><span style="color:#6A737D;">&gt;</span></span>
<span class="line"><span style="color:#6A737D;">    /// 时间</span></span>
<span class="line"><span style="color:#6A737D;">    /// &lt;/</span><span style="color:#85E89D;">summary</span><span style="color:#6A737D;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">DateTime</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">DetTime</span><span style="color:#E1E4E8;"> { </span><span style="color:#F97583;">get</span><span style="color:#E1E4E8;">; </span><span style="color:#F97583;">set</span><span style="color:#E1E4E8;">; } </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> DateTime.Now;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">/// &lt;</span><span style="color:#85E89D;">summary</span><span style="color:#6A737D;">&gt;</span></span>
<span class="line"><span style="color:#6A737D;">/// 消息格式</span></span>
<span class="line"><span style="color:#6A737D;">/// &lt;/</span><span style="color:#85E89D;">summary</span><span style="color:#6A737D;">&gt;</span></span>
<span class="line"><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">class</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">MessageData</span></span>
<span class="line"><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#6A737D;">    /// &lt;</span><span style="color:#85E89D;">summary</span><span style="color:#6A737D;">&gt;</span></span>
<span class="line"><span style="color:#6A737D;">    /// 主题</span></span>
<span class="line"><span style="color:#6A737D;">    /// &lt;/</span><span style="color:#85E89D;">summary</span><span style="color:#6A737D;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">string</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Subject</span><span style="color:#E1E4E8;"> { </span><span style="color:#F97583;">get</span><span style="color:#E1E4E8;">; </span><span style="color:#F97583;">set</span><span style="color:#E1E4E8;">; }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">    /// &lt;</span><span style="color:#85E89D;">summary</span><span style="color:#6A737D;">&gt;</span></span>
<span class="line"><span style="color:#6A737D;">    ///  内容</span></span>
<span class="line"><span style="color:#6A737D;">    /// &lt;/</span><span style="color:#85E89D;">summary</span><span style="color:#6A737D;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">string</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Content</span><span style="color:#E1E4E8;"> { </span><span style="color:#F97583;">get</span><span style="color:#E1E4E8;">; </span><span style="color:#F97583;">set</span><span style="color:#E1E4E8;">; }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br></div></div>`,24),r=[o];function c(E,t,y,i,b,u){return n(),a("div",null,r)}const d=s(e,[["render",c]]);export{F as __pageData,d as default};

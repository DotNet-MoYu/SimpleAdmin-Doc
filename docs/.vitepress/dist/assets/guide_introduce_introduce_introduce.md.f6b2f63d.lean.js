import{_ as t,S as o,N as n,B as i,j as e,t as r,a as d,Q as l,M as s}from"./chunks/framework.f9c570e8.js";const C=JSON.parse('{"title":"介绍","description":"","frontmatter":{},"headers":[],"relativePath":"guide/introduce/introduce/introduce.md","filePath":"guide/introduce/introduce/introduce.md","lastUpdated":1711351054000}'),u={name:"guide/introduce/introduce/introduce.md"},c=l('<h1 id="介绍" tabindex="-1">介绍 <a class="header-anchor" href="#介绍" aria-label="Permalink to &quot;介绍&quot;">​</a></h1><h2 id="简介" tabindex="-1">简介 <a class="header-anchor" href="#简介" aria-label="Permalink to &quot;简介&quot;">​</a></h2><p><a href="https://gitee.com/dotnetmoyu/SimpleAdmin" target="_blank" rel="noreferrer">SimpleAdmin</a> 是一个小而美的通用业务型后台管理系统，专为解决开发过程中的痛点难点而生。前端基于 ElementUI+Vue3+TypeScript,后端基于.NET6/7/8+SqlSugar 单例模式。采用 RBAC+多机构的权限管理模式，实现全网最灵活的接口级别数据权限控制。代码注释覆盖率大于<code>90%</code>,非常适合二次开发。将日常开发中的业务场景和框架紧密结合，并坚持以人为本,以业务为中心,做到开箱即用,代码简洁、易扩展，注释详细，文档齐全，让你的开发少走弯路。</p><h2 id="设计初衷和理念" tabindex="-1">设计初衷和理念 <a class="header-anchor" href="#设计初衷和理念" aria-label="Permalink to &quot;设计初衷和理念&quot;">​</a></h2><p>一个卓越的后台管理框架是开发者提升效率、降本增质的关键工具。我曾经尝试在 Git 上搜索开源的后台管理系统，希望能用它们作为公司项目的起点。可惜的是，我发现很多开源系统难以满足我的期待：要么缺失清晰的文档指导，要么代码质量让人担忧，要么系统的扩展性极为有限，要么系统功能过于庞大而失去焦点，积重难返。 正因为这样的挑战，我下定决心，要从无到有打造一个全新的后台管理框架,这就是<code>SimpleAdmin</code>的诞生背景。SimpleAdmin 是一个聚焦业务需求的管理系统，它的核心理念是<code>精简至上</code>。我们深知，在功能和实用性之间找到完美的平衡点至关重要，因此在 SimpleAdmin 中，我们只保留了那些最关键的、行之有效的功能，并且全力以赴将它们做得更完美。 SimpleAdmin 不只是工具，它更是一种承诺：确保每位开发者都能毫无障碍地掌握、进而深入定制，从而使得框架适应项目，而非让项目被迫适应框架。一个优秀的框架，应该是那样自解释的优雅，同时又能轻松应对二次开发的需求。 SimpleAdmin 更像是一种信念，它以代码的形式表达了我们对简约而不简单的追求。唯有包含这种哲学的框架，才算得上是有灵魂，有价值的。它不只是一个平台或者框架，而是一个为业务精准打造的解决方案，一个始终在为你省时、省心和省力的可靠盟友。</p><h2 id="系统特色" tabindex="-1">系统特色 <a class="header-anchor" href="#系统特色" aria-label="Permalink to &quot;系统特色&quot;">​</a></h2><h3 id="对于后端" tabindex="-1">对于后端 <a class="header-anchor" href="#对于后端" aria-label="Permalink to &quot;对于后端&quot;">​</a></h3>',7),h=i("li",null,"启动及运行,不会出现拉下来代码跑不起来的情况，自动生成数据库表和种子文件。",-1),m=i("li",null,"基于 SqlSugar 单例模式+CodeFirst+仓储的结构，无需担心作用域问题，直接爽撸。",-1),_=i("li",null,"插件式开发，代码更灵活，架构更清晰,每个业务层都可以是独立的，避免后期功能越来越多导致项目成为屎山。",-1),p=i("li",null,[e("极致缓存,系统快人一步,一些基础配置和用户权限信息都放在了缓存中，用户首次登录后，下次再登录接口耗时实测"),i("code",null,"10-30ms"),e("。")],-1),b=i("li",null,"RBAC+多机构的权限+动态刷新,修改用户权限后无需重新登录即可刷新用户权限。",-1),f=i("li",null,"全网最灵活的接口级别数据范围权限控制，可以指定某个角色/人员的某个接口的数据权限范围。",-1),q=i("br",null,null,-1),S=l('<h3 id="对于前端" tabindex="-1">对于前端 <a class="header-anchor" href="#对于前端" aria-label="Permalink to &quot;对于前端&quot;">​</a></h3><ul><li>基于 Vue3.3、Vite4、TS、Pinia、Element-Plus 等最新技术栈开发</li><li>基于<a href="https://docs.spicyboy.cn/" target="_blank" rel="noreferrer">GeeKer Admin</a>,界面比同类型 UI 更清爽又美观。</li><li>配置 Eslint、Prettier、Husky、Commitlint、Lint-staged 规范前端工程代码规范</li><li>提供丰富的组件、常用 Hooks 封装，在一定程度上节省你造轮子的时间。</li><li>提供多种布局方式切换，主题颜色配置，暗黑、灰色、色弱等模式。</li><li>丰富的代码注释,每一个页面都有解释说明,新手也能快速上手。</li></ul><h2 id="适用场景" tabindex="-1">适用场景 <a class="header-anchor" href="#适用场景" aria-label="Permalink to &quot;适用场景&quot;">​</a></h2><ul><li>搭建企业内部后台管理框架</li><li>接外包项目/私活</li><li>个人学习.Net 搭建 Web 框架</li><li>搭建商用项目</li></ul><h2 id="适用人群" tabindex="-1">适用人群 <a class="header-anchor" href="#适用人群" aria-label="Permalink to &quot;适用人群&quot;">​</a></h2><ul><li>对系统 UI 美观有要求</li><li>对学习新技术有兴趣，愿意接受新的技术</li><li>.NET 新手,想找一个框架学习,增加知识</li><li>对技术有要求,喜欢高质量代码</li><li>想要花更多时间陪陪家人,出去走走</li><li>不想在各种低级 bug 上浪费时间</li></ul><h2 id="版权声明" tabindex="-1">版权声明 <a class="header-anchor" href="#版权声明" aria-label="Permalink to &quot;版权声明&quot;">​</a></h2><ul><li>请不要删除和修改根目录下的 LICENSE 文件。</li><li>请不要删除和修改 SimpleAdmin 源码头部的版权声明。</li><li>分发源码时候，请注明软件出处。</li><li>基于本软件的作品，只能使用 SimpleAdmin 作为后台服务，除外情况不可商用且不允许二次分发或开源。</li><li>请不得将本软件应用于危害国家安全、荣誉和利益的行为，不能以任何形式用于非法为目的的行为。</li><li>任何基于本软件而产生的一切法律纠纷和责任，均于作者无关。</li></ul>',8);function P(k,x,A,g,N,E){const a=s("font");return o(),n("div",null,[c,i("ul",null,[h,m,_,p,b,f,i("li",null,[e("后端源码注释覆盖率超过"),r(a,{color:"#dd0000"},{default:d(()=>[e("90%")]),_:1}),q,e(",每一个方法,每一步都有详细的解释和说明，根据注释和文档也能轻易看懂和二次开发,不用每天在群里问一些非常基础的问题，节约了大量的开发时间。")])]),S])}const U=t(u,[["render",P]]);export{C as __pageData,U as default};
